{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloConsumer = function (props) {\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    invariant(context && context.client, 44);\n    return props.children(context.client);\n  });\n};","map":{"version":3,"sources":["../../../src/react/context/ApolloConsumer.tsx"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,kCAA1B;AAEA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,SAAS,gBAAT,QAAiC,oBAAjC;AAMA,OAAO,IAAM,cAAc,GAAkC,UAAC,KAAD,EAAM;AACjE,MAAM,aAAa,GAAG,gBAAgB,EAAtC;AACA,SACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAf,EAAuB,IAAvB,EACG,UAAC,OAAD,EAAa;AACZ,IAAA,SAAS,CACP,OAAO,IAAI,OAAO,CAAC,MADZ,EAEP,EAFO,CAAT;AAGI,WAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA;AAEJ,GAPJ,CADF;AASI,CAXC","sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloConsumerProps {\n  children: (client: ApolloClient<object>) => React.ReactChild | null;\n}\n\nexport const ApolloConsumer: React.FC<ApolloConsumerProps> = (props) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any) => {\n        invariant(\n          context && context.client,\n          'Could not find \"client\" in the context of ApolloConsumer. ' +\n            \"Wrap the root component in an <ApolloProvider>.\"\n        );\n        return props.children(context.client);\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}