{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = React.useContext(getApolloContext());\n  var client = override || context.client;\n  invariant(!!client, 49);\n  return client;\n}","map":{"version":3,"sources":["../../../src/react/hooks/useApolloClient.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,kCAA1B;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,gBAAT,QAAiC,qBAAjC;AAEA,OAAM,SAAU,eAAV,CACJ,QADI,EAC2B;AAE/B,MAAM,OAAO,GAAG,KAAK,CAAC,UAAN,CAAiB,gBAAgB,EAAjC,CAAhB;AACA,MAAM,MAAM,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAnC;AACA,EAAA,SAAS,CACP,CAAC,CAAC,MADK,EAEP,EAFO,CAAT;AAGI,SAAA,MAAA;AACA","sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}