{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { visit } from \"graphql\";\nexport function filterOperationVariables(variables, query) {\n  var result = __assign({}, variables);\n\n  var unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable: function (node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (parent && parent.kind !== \"VariableDefinition\") {\n        unusedNames.delete(node.name.value);\n      }\n    }\n  });\n  unusedNames.forEach(function (name) {\n    delete result[name];\n  });\n  return result;\n}","map":{"version":3,"sources":["../../../src/link/utils/filterOperationVariables.ts"],"names":[],"mappings":";AACA,SAAS,KAAT,QAAsB,SAAtB;AAEA,OAAM,SAAU,wBAAV,CACJ,SADI,EAEJ,KAFI,EAEe;AAEnB,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,SAAR,CAAZ;;AACA,MAAM,WAAW,GAAG,IAAI,GAAJ,CAAQ,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAR,CAApB;AACA,EAAA,KAAK,CAAC,KAAD,EAAQ;AACX,IAAA,QAAQ,EAAA,UAAC,IAAD,EAAO,IAAP,EAAa,MAAb,EAAmB;AACzB;AACA;AACA;AACA;AACA,UACE,MAAM,IACL,MAAiC,CAAC,IAAlC,KAA2C,oBAF9C,EAGE;AACA,QAAA,WAAW,CAAC,MAAZ,CAAmB,IAAI,CAAC,IAAL,CAAU,KAA7B;AACD;AACF;AAZU,GAAR,CAAL;AAcA,EAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,IAAD,EAAK;AACvB,WAAO,MAAO,CAAC,IAAD,CAAd;AACD,GAFD;AAGA,SAAO,MAAP;AACD","sourcesContent":["import type { VariableDefinitionNode, DocumentNode } from \"graphql\";\nimport { visit } from \"graphql\";\n\nexport function filterOperationVariables(\n  variables: Record<string, any>,\n  query: DocumentNode\n) {\n  const result = { ...variables };\n  const unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable(node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (\n        parent &&\n        (parent as VariableDefinitionNode).kind !== \"VariableDefinition\"\n      ) {\n        unusedNames.delete(node.name.value);\n      }\n    },\n  });\n  unusedNames.forEach((name) => {\n    delete result![name];\n  });\n  return result;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}