{"ast":null,"code":"import * as React from \"react\";\nvar INIT = {};\nexport function useLazyRef(getInitialValue) {\n  var ref = React.useRef(INIT);\n\n  if (ref.current === INIT) {\n    ref.current = getInitialValue();\n  }\n\n  return ref;\n}","map":{"version":3,"sources":["../../../../src/react/hooks/internal/useLazyRef.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,IAAM,IAAI,GAAG,EAAb;AAEA,OAAM,SAAU,UAAV,CAAwB,eAAxB,EAAgD;AACpD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAN,CAAgB,IAAhB,CAAZ;;AAEA,MAAI,GAAG,CAAC,OAAJ,KAAgB,IAApB,EAA0B;AACxB,IAAA,GAAG,CAAC,OAAJ,GAAc,eAAe,EAA7B;AACD;;AAED,SAAO,GAAP;AACD","sourcesContent":["import * as React from \"react\";\n\nconst INIT = {};\n\nexport function useLazyRef<T>(getInitialValue: () => T) {\n  const ref = React.useRef<T>(INIT as unknown as T);\n\n  if (ref.current === INIT) {\n    ref.current = getInitialValue();\n  }\n\n  return ref;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}